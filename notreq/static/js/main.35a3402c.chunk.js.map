{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","addedNote","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAChBC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACA,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCMzBI,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAGH,qBAAKC,UAAU,QAAf,SACKD,K,gBCPXE,EAAU,wDAwBD,EAtBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAClBC,GAAI,IACJV,QAAS,sBACTW,KAAM,2BACNZ,WAAW,GAEb,OAAOO,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAcxC,EAXA,SAAAO,GAEb,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCgE5BK,EAhFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEClB,MAAK,SAAAmB,GACJT,EAASS,QAEV,IAEH,IAsCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKG,aAEhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAASwB,IACvB,8BACE,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAAtC,GAAI,OACnB,cAAC,EAAD,CAEAA,KAAMA,EACNC,iBAAkB,kBAnCC,SAACa,GAC1B,IAAMd,EAAOyB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQzC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EAAmBpB,EAAI2B,GACtBzB,MAAK,SAAA0B,GACJhB,EAASD,EAAMa,KAAI,SAAAtC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO0C,SAEpDC,OAAM,SAAAC,GACLZ,EAAgB,aAAD,OACAhC,EAAKI,QADL,2CAGfyC,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAE1B,KAAOA,SAoBRgC,CAAmB9C,EAAKc,MAF3Cd,EAAKc,SAMd,uBAAMiC,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASuB,EACTZ,MAAM,IAAIoC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,IAE7BpB,EACUgB,GACPlC,MAAK,SAAAuC,GACJ7B,EAASD,EAAMN,OAAOoC,IACtB3B,EAAW,QA+Cb,UACE,uBAAO4B,MAAO7B,EAAS8B,SA5CJ,SAACT,GACxBpB,EAAWoB,EAAMU,OAAOF,UA4CpB,wBAAQG,KAAK,SAAb,yB,MCzERC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35a3402c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\nconst label = note.important ? 'make not important' : 'make important'\n\nreturn(\n<li>\n    {note.content}\n    <button onClick={toggleImportance}>{label}</button>\n</li>)\n}\n\nexport default Note","import React from \"react\"\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    } else {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'https://powerful-harbor-45760.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 1000,\n    content: \"This is a fake note\",\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from \"./components/Notification\"\nimport noteService from \"./services/notes\"\n\nconst App = () => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => { \n    noteService     \n    .getAll()      \n    .then(initialNotes => {             \n      setNotes(initialNotes)      \n    })  \n  }, [])  \n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(addedNote => {\n        setNotes(notes.concat(addedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important}\n\n    noteService.update(id, changedNote)\n    .then(updatedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `the note '${note.content}' was already deleted from the server.`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n          key={note.id} \n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)} \n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App ","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}