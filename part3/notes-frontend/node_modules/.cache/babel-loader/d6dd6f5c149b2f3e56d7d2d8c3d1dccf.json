{"ast":null,"code":"var _jsxFileName = \"/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/App.js\";\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport noteReducer from \"./reducers/noteReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(noteReducer);\n\nconst generateId = () => Math.floor(Math.random() * 1000000);\n\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"the app state is in redux store\",\n    important: true,\n    id: 1\n  }\n});\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"state changes are made with actions\",\n    important: false,\n    id: 2\n  }\n});\n\nconst App = () => {\n  const addNote = event => {\n    event.preventDefault();\n    const content = event.target.note.value;\n    event.target.note.value = \"\";\n    store.dispatch({\n      type: \"NEW_NOTE\",\n      data: {\n        content,\n        important: false,\n        id: generateId()\n      }\n    });\n  };\n\n  const toggleImportance = id => {\n    store.dispatch({\n      type: \"TOGGLE_IMPORTANCE\",\n      data: {\n        id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: store.getState().map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleImportance(note.id),\n        children: [note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? \"important\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 28\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/App.js"],"names":["React","createStore","noteReducer","store","generateId","Math","floor","random","dispatch","type","data","content","important","id","App","addNote","event","preventDefault","target","note","value","toggleImportance","getState","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAACC,WAAD,CAAzB;;AAEA,MAAME,UAAU,GAAG,MACjBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CADF;;AAKAJ,KAAK,CAACK,QAAN,CAAe;AACbC,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,iCADL;AAEJC,IAAAA,SAAS,EAAE,IAFP;AAGJC,IAAAA,EAAE,EAAE;AAHA;AAFO,CAAf;AASAV,KAAK,CAACK,QAAN,CAAe;AACbC,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,qCADL;AAEJC,IAAAA,SAAS,EAAE,KAFP;AAGJC,IAAAA,EAAE,EAAE;AAHA;AAFO,CAAf;;AASA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMN,OAAO,GAAGK,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAAlC;AACAJ,IAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAAlB,GAA0B,EAA1B;AACAjB,IAAAA,KAAK,CAACK,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,UADO;AAEbC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OADI;AAEJC,QAAAA,SAAS,EAAE,KAFP;AAGJC,QAAAA,EAAE,EAAET,UAAU;AAHV;AAFO,KAAf;AAQD,GAZD;;AAcA,QAAMiB,gBAAgB,GAAIR,EAAD,IAAQ;AAC/BV,IAAAA,KAAK,CAACK,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,mBADO;AAEbC,MAAAA,IAAI,EAAE;AAAEG,QAAAA;AAAF;AAFO,KAAf;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEE,OAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBACGZ,KAAK,CAACmB,QAAN,GAAiBC,GAAjB,CAAqBJ,IAAI,iBACxB;AAEE,QAAA,OAAO,EAAE,MAAME,gBAAgB,CAACF,IAAI,CAACN,EAAN,CAFjC;AAAA,mBAIGM,IAAI,CAACR,OAJR,oBAIiB;AAAA,oBAASQ,IAAI,CAACP,SAAL,GAAiB,WAAjB,GAA+B;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAJjB;AAAA,SACOO,IAAI,CAACN,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxCD;;KAAMC,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React from \"react\"\nimport { createStore } from \"redux\"\nimport noteReducer from \"./reducers/noteReducer\"\n\nconst store = createStore(noteReducer)\n\nconst generateId = () =>\n  Math.floor(Math.random() * 1000000)\n\n\n\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"the app state is in redux store\",\n    important: true,\n    id: 1\n  }\n})\n\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"state changes are made with actions\",\n    important: false,\n    id: 2\n  }\n})\n\nconst App = () => {\n  const addNote = (event) => {\n    event.preventDefault()\n    const content = event.target.note.value\n    event.target.note.value = \"\"\n    store.dispatch({\n      type: \"NEW_NOTE\",\n      data: {\n        content,\n        important: false,\n        id: generateId()\n      }\n    })\n  }\n\n  const toggleImportance = (id) => {\n    store.dispatch({\n      type: \"TOGGLE_IMPORTANCE\",\n      data: { id }\n    })\n  }\n\n  return(\n    <div>\n      <form onSubmit={addNote}>\n        <input name=\"note\" />\n        <button type=\"submit\">add</button>\n      </form>\n      <ul>\n        {store.getState().map(note =>\n          <li\n            key={note.id}\n            onClick={() => toggleImportance(note.id)}\n          >\n            {note.content} <strong>{note.important ? \"important\" : \"\"}</strong>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}