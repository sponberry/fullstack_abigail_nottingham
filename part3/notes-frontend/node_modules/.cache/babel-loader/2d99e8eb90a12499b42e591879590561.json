{"ast":null,"code":"var _jsxFileName = \"/Users/abigailnottingham/HTML Projects/fullstack_abigail_nottingham/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  count\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n    scope: \"row\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 31\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (good > 0 || bad > 0 || neutral > 0) {\n    let totals = good + neutral + bad;\n    let representativeTotals = good + neutral * 0.5 + bad * -1;\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: \"Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: representativeTotals / totals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: \"Positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [good / totals * 100, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const goodFeedback = () => setGood(good + 1);\n\n  const badFeedback = () => setBad(bad + 1);\n\n  const neutralFeedback = () => setNeutral(neutral + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: goodFeedback,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: badFeedback,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: neutralFeedback,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Good\",\n          count: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Bad\",\n          count: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"Neutral\",\n          count: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_abigail_nottingham/part1/unicafe/src/App.js"],"names":["React","useState","Button","handleClick","text","Statistic","count","Statistics","good","neutral","bad","totals","representativeTotals","App","setGood","setNeutral","setBad","goodFeedback","badFeedback","neutralFeedback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,kBACb;AAAQ,EAAA,OAAO,EAAED,WAAjB;AAAA,YACGC;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,M;;AAMN,MAAMG,SAAS,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQE,EAAAA;AAAR,CAAD,kBAChB;AAAA,0BACA;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA,cAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA,UADA,oBAC4B;AAAA,cAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,UAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,S;;AAMN,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AAC7C,MAAIF,IAAI,GAAG,CAAP,IAAYE,GAAG,GAAG,CAAlB,IAAuBD,OAAO,GAAG,CAArC,EAAwC;AACtC,QAAIE,MAAM,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA9B;AACA,QAAIE,oBAAoB,GAAGJ,IAAI,GAAIC,OAAO,GAAG,GAAlB,GAA0BC,GAAG,GAAG,CAAC,CAA5D;AACA,wBACE;AAAA,8BACE;AAAA,gCAAI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,oBAA6B;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,oBAAiC;AAAA,oBAAKC,oBAAoB,GAAGD;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCAAI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,oBAAkC;AAAA,qBAAMH,IAAI,GAAGG,MAAR,GAAgB,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC,GAVH,MAUS;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACJ,CAhBD;;MAAMJ,U;;AAkBN,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUM,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMM,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMgB,YAAY,GAAG,MAAMH,OAAO,CAACN,IAAI,GAAG,CAAR,CAAlC;;AACA,QAAMU,WAAW,GAAG,MAAMF,MAAM,CAACN,GAAG,GAAG,CAAP,CAAhC;;AACA,QAAMS,eAAe,GAAG,MAAMJ,UAAU,CAACN,OAAO,GAAG,CAAX,CAAxC;;AAGA,sBACA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEQ,YAArB;AAAmC,MAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,WAArB;AAAkC,MAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,eAArB;AAAsC,MAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BACE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,MAAjB;AAAyB,UAAA,KAAK,EAAEX;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,KAAjB;AAAwB,UAAA,KAAK,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAE,SAAjB;AAA4B,UAAA,KAAK,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED,IAAlB;AAAwB,QAAA,OAAO,EAAEC,OAAjC;AAA0C,QAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBD,CA3BD;;GAAMG,G;;MAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = ({ text, count }) => (\n  <tr>\n  <th scope=\"row\">{text}</th> <td>{count}</td>\n  </tr>\n)\n\nconst Statistics = ({ good, neutral, bad }) => {\n  if (good > 0 || bad > 0 || neutral > 0) {\n    let totals = good + neutral + bad\n    let representativeTotals = good + (neutral * 0.5) + (bad * -1)\n    return (\n      <tbody>\n        <tr><th scope=\"row\">All</th> <td>{totals}</td></tr>\n        <tr><th scope=\"row\">Average</th> <td>{representativeTotals / totals}</td></tr>\n        <tr><th scope=\"row\">Positive</th> <td>{(good / totals)*100}%</td></tr>\n      </tbody>\n    )\n    } else {\n      return (\n        <p>No feedback given</p>\n      )\n    }\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const goodFeedback = () => setGood(good + 1);\n  const badFeedback = () => setBad(bad + 1);\n  const neutralFeedback = () => setNeutral(neutral + 1);\n\n\n  return (\n  <div>\n    <h1>give feedback</h1>\n    <Button handleClick={goodFeedback} text=\"Good\" />\n    <Button handleClick={badFeedback} text=\"Bad\" />\n    <Button handleClick={neutralFeedback} text=\"Neutral\" />\n    <h2>statistics</h2>\n    <table>\n      <tbody>\n        <Statistic text={\"Good\"} count={good} />\n        <Statistic text={\"Bad\"} count={bad} />\n        <Statistic text={\"Neutral\"} count={neutral} />\n      </tbody>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </table>\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}