{"ast":null,"code":"var _jsxFileName = \"/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport loginService from \"../services/login\";\nimport noteService from \"../services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  setUser,\n  setErrorMessage\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  LoginForm.propTypes = {\n    setUser: PropTypes.func.isRequired,\n    setErrorMessage: PropTypes.func.isRequired,\n    user: PropTypes.isRequired,\n    errorMessage: PropTypes.isRequired\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedNoteappUser\", JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"username\",\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"Username\",\n        placeholder: \"enter username\",\n        value: username,\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"Password\",\n        placeholder: \"enter password\",\n        value: password,\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/components/LoginForm.js"],"names":["React","useState","PropTypes","loginService","noteService","LoginForm","setUser","setErrorMessage","username","setUsername","password","setPassword","propTypes","func","isRequired","user","errorMessage","handleLogin","event","preventDefault","login","window","localStorage","setItem","JSON","stringify","setToken","token","exception","setTimeout","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport loginService from \"../services/login\"\nimport noteService from \"../services/notes\"\n\nconst LoginForm = ({ setUser, setErrorMessage }) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  LoginForm.propTypes = {\n    setUser: PropTypes.func.isRequired,\n    setErrorMessage: PropTypes.func.isRequired,\n    user: PropTypes.isRequired,\n    errorMessage: PropTypes.isRequired\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        \"loggedNoteappUser\", JSON.stringify(user)\n      )\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername(\"\")\n      setPassword(\"\")\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\")\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  return(\n    <form onSubmit={handleLogin}>\n      <div>\n        <label id=\"username\">username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          name=\"Username\"\n          placeholder=\"enter username\"\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        <label id=\"password\">password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"Password\"\n          placeholder=\"enter password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}