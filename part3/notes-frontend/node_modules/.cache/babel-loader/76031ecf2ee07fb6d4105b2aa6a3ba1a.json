{"ast":null,"code":"var _jsxFileName = \"/Users/abigailnottingham/HTML Projects/fullstack_an/part2/notes/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from \"./services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(addedNote => {\n      setNotes(notes.concat(addedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(updatedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : updatedNote));\n    }).catch(error => {\n      alert(`the note '${note.content}' was already deleted from the server.`);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_an/part2/notes/src/App.js"],"names":["React","useState","useEffect","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","addedNote","concat","handleNoteChange","target","value","toggleImportanceOf","id","note","find","n","changedNote","update","updatedNote","map","catch","error","alert","filter","notesToShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from \"./services/notes\"\n\nconst App = () => {  \n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => { \n    noteService     \n    .getAll()      \n    .then(initialNotes => {             \n      setNotes(initialNotes)      \n    })  \n  }, [])  \n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(addedNote => {\n        setNotes(notes.concat(addedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important}\n\n    noteService.update(id, changedNote)\n    .then(updatedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from the server.`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n          key={note.id} \n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)} \n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App "]},"metadata":{},"sourceType":"module"}