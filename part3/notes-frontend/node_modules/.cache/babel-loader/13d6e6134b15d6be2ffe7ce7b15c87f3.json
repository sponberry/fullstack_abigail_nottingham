{"ast":null,"code":"const initialState = [{\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"the app state is in redux store\",\n    important: true,\n    id: 1\n  }\n}, {\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"state changes are made with actions\",\n    important: false,\n    id: 2\n  }\n}];\n\nconst noteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"NEW_NOTE\":\n      return [...state, action.data];\n\n    case \"TOGGLE_IMPORTANCE\":\n      {\n        const id = action.data.id;\n        const noteToChange = state.find(n => n.id === id);\n        const changedNote = { ...noteToChange,\n          important: !noteToChange.important\n        };\n        return state.map(note => note.id !== id ? note : changedNote);\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst generateId = () => Math.floor(Math.random() * 1000000);\n\nexport const createNote = content => {\n  return {\n    type: \"NEW_NOTE\",\n    data: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: \"TOGGLE_IMPORTANCE\",\n    data: {\n      id\n    }\n  };\n};\nexport default noteReducer;","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/reducers/noteReducer.js"],"names":["initialState","type","data","content","important","id","noteReducer","state","action","noteToChange","find","n","changedNote","map","note","generateId","Math","floor","random","createNote","toggleImportanceOf"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CACnB;AACEC,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,iCADL;AAEJC,IAAAA,SAAS,EAAE,IAFP;AAGJC,IAAAA,EAAE,EAAE;AAHA;AAFR,CADmB,EASnB;AACEJ,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,qCADL;AAEJC,IAAAA,SAAS,EAAE,KAFP;AAGJC,IAAAA,EAAE,EAAE;AAHA;AAFR,CATmB,CAArB;;AAoBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAOA,MAAM,CAACP,IAAd;AACA,SAAK,UAAL;AACE,aAAO,CAAC,GAAGM,KAAJ,EAAWC,MAAM,CAACN,IAAlB,CAAP;;AACF,SAAK,mBAAL;AAA0B;AACxB,cAAMG,EAAE,GAAGG,MAAM,CAACN,IAAP,CAAYG,EAAvB;AACA,cAAMI,YAAY,GAAGF,KAAK,CAACG,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASA,EAAzB,CAArB;AACA,cAAMO,WAAW,GAAG,EAClB,GAAGH,YADe;AAElBL,UAAAA,SAAS,EAAE,CAACK,YAAY,CAACL;AAFP,SAApB;AAIA,eAAOG,KAAK,CAACM,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACT,EAAL,KAAYA,EAAZ,GAAiBS,IAAjB,GAAwBF,WADnB,CAAP;AAGD;;AACD;AACE,aAAOL,KAAP;AAfF;AAiBD,CAlBD;;AAoBA,MAAMQ,UAAU,GAAG,MACjBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CADF;;AAGA,OAAO,MAAMC,UAAU,GAAIhB,OAAD,IAAa;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OADI;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,EAAE,EAAEU,UAAU;AAHV;AAFD,GAAP;AAQD,CATM;AAWP,OAAO,MAAMK,kBAAkB,GAAIf,EAAD,IAAQ;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,IAAI,EAAE;AAAEG,MAAAA;AAAF;AAFD,GAAP;AAID,CALM;AAOP,eAAeC,WAAf","sourcesContent":["const initialState = [\n  {\n    type: \"NEW_NOTE\",\n    data: {\n      content: \"the app state is in redux store\",\n      important: true,\n      id: 1\n    }\n  },\n  {\n    type: \"NEW_NOTE\",\n    data: {\n      content: \"state changes are made with actions\",\n      important: false,\n      id: 2\n    }\n  }\n]\n\n\nconst noteReducer = (state = initialState, action) => {\n  switch(action.type) {\n  case \"NEW_NOTE\":\n    return [...state, action.data]\n  case \"TOGGLE_IMPORTANCE\": {\n    const id = action.data.id\n    const noteToChange = state.find(n => n.id === id)\n    const changedNote = {\n      ...noteToChange,\n      important: !noteToChange.important\n    }\n    return state.map(note =>\n      note.id !== id ? note : changedNote\n    )\n  }\n  default:\n    return state\n  }\n}\n\nconst generateId = () =>\n  Math.floor(Math.random() * 1000000)\n\nexport const createNote = (content) => {\n  return {\n    type: \"NEW_NOTE\",\n    data: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  }\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: \"TOGGLE_IMPORTANCE\",\n    data: { id }\n  }\n}\n\nexport default noteReducer"]},"metadata":{},"sourceType":"module"}