{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 1000,\n    content: \"This is a fake note\",\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update\n};","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_an/part2/notes/src/services/notes.js"],"names":["axios","baseUrl","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,QAAMI,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAE,IADc;AAElBC,IAAAA,OAAO,EAAE,qBAFS;AAGlBC,IAAAA,IAAI,EAAE,0BAHY;AAIlBC,IAAAA,SAAS,EAAE;AAJO,GAApB;AAMA,SAAON,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAAzB,CAAP;AACD,CATD;;AAWA,MAAMS,MAAM,GAAGC,SAAS,IAAI;AAC1B,QAAMZ,OAAO,GAAGH,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBc,SAApB,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMK,MAAM,GAAG,CAACX,EAAD,EAAKS,SAAL,KAAmB;AAChC,QAAMZ,OAAO,GAAGH,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,IAAGK,EAAG,EAA3B,EAA8BS,SAA9B,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEV,EAAAA,MAAF;AAAUY,EAAAA,MAAV;AAAkBG,EAAAA;AAAlB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 1000,\n    content: \"This is a fake note\",\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }"]},"metadata":{},"sourceType":"module"}