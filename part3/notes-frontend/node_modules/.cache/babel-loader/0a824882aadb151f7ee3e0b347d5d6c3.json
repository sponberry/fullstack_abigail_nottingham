{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 1000,\n    content: \"This is a fake note\",\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken\n}; // eslint-disable-line import/no-anonymous-default-export","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/services/notes.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","config","headers","Authorization","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,QAAMO,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAE,IADc;AAElBC,IAAAA,OAAO,EAAE,qBAFS;AAGlBC,IAAAA,IAAI,EAAE,0BAHY;AAIlBC,IAAAA,SAAS,EAAE;AAJO,GAApB;AAMA,SAAON,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAAzB,CAAP;AACD,CATD;;AAWA,MAAMS,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEnB;AAAhB;AADI,GAAf;AAGA,QAAMY,QAAQ,GAAG,MAAMd,KAAK,CAACsB,IAAN,CAAWrB,OAAX,EAAoBiB,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOL,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMQ,MAAM,GAAG,CAACd,EAAD,EAAKS,SAAL,KAAmB;AAChC,QAAMZ,OAAO,GAAGN,KAAK,CAACwB,GAAN,CAAW,GAAEvB,OAAQ,IAAGQ,EAAG,EAA3B,EAA8BS,SAA9B,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEV,EAAAA,MAAF;AAAUY,EAAAA,MAAV;AAAkBM,EAAAA,MAAlB;AAA0BpB,EAAAA;AAA1B,CAAf,C,CAAoD","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"/api/notes\"\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 1000,\n    content: \"This is a fake note\",\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: {Authorization: token}\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken } // eslint-disable-line import/no-anonymous-default-export"]},"metadata":{},"sourceType":"module"}