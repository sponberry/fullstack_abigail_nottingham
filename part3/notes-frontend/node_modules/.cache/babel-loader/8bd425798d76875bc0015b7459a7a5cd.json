{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/notes\";\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst createNew = async content => {\n  const object = {\n    content,\n    important: false\n  };\n  const response = await axios.post(baseUrl, object);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  createNew\n}; // import axios from \"axios\"\n// const baseUrl = \"/api/notes\"\n// let token = null\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   const nonExisting = {\n//     id: 1000,\n//     content: \"This is a fake note\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   }\n//   return request.then(response => response.data.concat(nonExisting))\n// }\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n// export default { getAll, create, update, setToken }","map":{"version":3,"sources":["/Users/abigailnottingham/HTML Projects/fullstack_open/fullstack_an/part3/notes-frontend/src/services/notes.js"],"names":["axios","baseUrl","getAll","response","get","data","createNew","content","object","important","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACnC,QAAMC,MAAM,GAAG;AAAED,IAAAA,OAAF;AAAWE,IAAAA,SAAS,EAAE;AAAtB,GAAf;AACA,QAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAN,CAAWT,OAAX,EAAoBO,MAApB,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CAJD;;AAMA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA;AAAV,CAAf,C,CAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from \"axios\"\n\nconst baseUrl = \"http://localhost:3001/notes\"\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (content) => {\n  const object = { content, important: false }\n  const response = await axios.post(baseUrl, object)\n  return response.data\n}\n\nexport default { getAll, createNew }\n\n// import axios from \"axios\"\n// const baseUrl = \"/api/notes\"\n\n// let token = null\n\n// const setToken = newToken => {\n//   token = `bearer ${newToken}`\n// }\n\n// const getAll = () => {\n//   const request = axios.get(baseUrl)\n//   const nonExisting = {\n//     id: 1000,\n//     content: \"This is a fake note\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   }\n//   return request.then(response => response.data.concat(nonExisting))\n// }\n\n// const create = async newObject => {\n//   const config = {\n//     headers: { Authorization: token },\n//   }\n//   const response = await axios.post(baseUrl, newObject, config)\n//   return response.data\n// }\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\n// export default { getAll, create, update, setToken }"]},"metadata":{},"sourceType":"module"}